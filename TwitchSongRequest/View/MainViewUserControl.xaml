<UserControl
    x:Class="TwitchSongRequest.View.MainViewUserControl"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:adonisExtensions="clr-namespace:AdonisUI.Extensions;assembly=AdonisUI"
    xmlns:adonisUi="clr-namespace:AdonisUI;assembly=AdonisUI"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:viewModels="clr-namespace:TwitchSongRequest.ViewModel"
    xmlns:views="clr-namespace:TwitchSongRequest.View"
    d:DesignHeight="500"
    d:DesignWidth="800"
    mc:Ignorable="d">

    <UserControl.Resources>
        <DataTemplate DataType="{x:Type viewModels:ConfirmationDialogViewModel}">
            <views:ConfirmationDialogUserControl />
        </DataTemplate>
    </UserControl.Resources>

    <Grid>

        <Grid.RowDefinitions>
            <RowDefinition Height="150" />
            <RowDefinition Height="3*" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="2*" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>

        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="1*" />
                <ColumnDefinition Width="1*" />
                <ColumnDefinition Width="1*" />
            </Grid.ColumnDefinitions>

            <views:PlaybackControlsUserControl />

            <views:PlaybackStatusUserControl Grid.Column="1" />

            <views:ConnectionStatusUserControl Grid.Column="2" />

        </Grid>

        <DockPanel Grid.Row="1">
            <DockPanel Margin="8,0" DockPanel.Dock="Top">
                <Label
                    Margin="8,0"
                    VerticalAlignment="Bottom"
                    Content="Queue" />
                <StackPanel
                    Margin="8,0"
                    HorizontalAlignment="Right"
                    Orientation="Horizontal">
                    <CheckBox
                        x:Name="RefundAllCheckBox"
                        Content="Refund channel points?"
                        IsChecked="{Binding AppSettings.RefundAllPoints}" />
                    <Button
                        Width="85"
                        Height="25"
                        Margin="16,0"
                        Command="{Binding ClearQueueCommand}"
                        CommandParameter="{Binding IsChecked, ElementName=RefundAllCheckBox}"
                        Content="Clear queue" />
                </StackPanel>
            </DockPanel>

            <ListView
                Name="SongRequestsListView"
                Margin="16,8"
                ItemsSource="{Binding SongRequestQueue}"
                ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                SizeChanged="SongRequestsListView_SizeChanged">
                <ListView.ItemContainerStyle>
                    <Style BasedOn="{StaticResource {x:Type ListViewItem}}" TargetType="{x:Type ListViewItem}">
                        <Setter Property="VerticalContentAlignment" Value="Center" />
                    </Style>
                </ListView.ItemContainerStyle>
                <ListView.View>
                    <GridView AllowsColumnReorder="False">
                        <GridView.ColumnHeaderContainerStyle>
                            <Style BasedOn="{StaticResource {x:Type GridViewColumnHeader}}" TargetType="{x:Type GridViewColumnHeader}">
                                <Setter Property="IsHitTestVisible" Value="False" />
                            </Style>
                        </GridView.ColumnHeaderContainerStyle>
                        <GridViewColumn Width="Auto" Header="Name">
                            <GridViewColumn.CellTemplate>
                                <DataTemplate>
                                    <TextBlock Text="{Binding SongName}" TextTrimming="CharacterEllipsis" />
                                </DataTemplate>
                            </GridViewColumn.CellTemplate>
                        </GridViewColumn>
                        <GridViewColumn
                            Width="Auto"
                            DisplayMemberBinding="{Binding Duration, Converter={StaticResource MmSsConverter}}"
                            Header="Duration" />
                        <GridViewColumn
                            Width="Auto"
                            DisplayMemberBinding="{Binding Requester}"
                            Header="Requester" />
                        <GridViewColumn Width="Auto" Header="Url">
                            <GridViewColumn.CellTemplate>
                                <DataTemplate>
                                    <TextBlock>
                                        <Hyperlink Command="{Binding DataContext.ProcessStartUriCommand, RelativeSource={RelativeSource AncestorType=ListView, Mode=FindAncestor}}" CommandParameter="{Binding Url}">
                                            <TextBlock Text="{Binding Url}" TextTrimming="CharacterEllipsis" />
                                        </Hyperlink>
                                    </TextBlock>
                                </DataTemplate>
                            </GridViewColumn.CellTemplate>
                        </GridViewColumn>
                        <GridViewColumn
                            Width="Auto"
                            DisplayMemberBinding="{Binding Platform}"
                            Header="Platform" />
                        <GridViewColumn Width="Auto" Header="">
                            <GridViewColumn.CellTemplate>
                                <DataTemplate>
                                    <Button
                                        adonisExtensions:CursorSpotlightExtension.BackgroundBrush="Tomato"
                                        Background="Red"
                                        Command="{Binding DataContext.RemoveSongQueueCommand, RelativeSource={RelativeSource AncestorType=ListView, Mode=FindAncestor}}"
                                        CommandParameter="{Binding}"
                                        Content="🗑️" />
                                </DataTemplate>
                            </GridViewColumn.CellTemplate>
                        </GridViewColumn>
                    </GridView>
                </ListView.View>
            </ListView>
        </DockPanel>

        <GridSplitter
            Grid.Row="2"
            Height="4"
            HorizontalAlignment="Stretch"
            VerticalAlignment="Stretch"
            ResizeBehavior="PreviousAndNext"
            ResizeDirection="Rows" />

        <DockPanel Grid.Row="3">
            <Grid Margin="16,0" DockPanel.Dock="Top">
                <Label VerticalAlignment="Bottom" Content="History" />
                <Button
                    Width="85"
                    Height="25"
                    Margin="16,0"
                    HorizontalAlignment="Right"
                    Command="{Binding ClearHistoryCommand}"
                    Content="Clear history" />
            </Grid>

            <ListView
                Name="SongRequestsHistoryListView"
                Margin="16,8"
                ItemsSource="{Binding SongRequestHistory}"
                ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                SizeChanged="SongRequestsHistoryListView_SizeChanged">
                <ListView.View>
                    <GridView AllowsColumnReorder="False">
                        <GridView.ColumnHeaderContainerStyle>
                            <Style BasedOn="{StaticResource {x:Type GridViewColumnHeader}}" TargetType="{x:Type GridViewColumnHeader}">
                                <Setter Property="IsHitTestVisible" Value="False" />
                            </Style>
                        </GridView.ColumnHeaderContainerStyle>
                        <GridViewColumn Width="Auto" Header="Name">
                            <GridViewColumn.CellTemplate>
                                <DataTemplate>
                                    <TextBlock Text="{Binding SongName}" TextTrimming="CharacterEllipsis" />
                                </DataTemplate>
                            </GridViewColumn.CellTemplate>
                        </GridViewColumn>
                        <GridViewColumn
                            Width="Auto"
                            DisplayMemberBinding="{Binding Duration, Converter={StaticResource MmSsConverter}}"
                            Header="Duration" />
                        <GridViewColumn
                            Width="Auto"
                            DisplayMemberBinding="{Binding Requester}"
                            Header="Requester" />
                        <GridViewColumn Width="Auto" Header="Url">
                            <GridViewColumn.CellTemplate>
                                <DataTemplate>
                                    <TextBlock>
                                        <Hyperlink Command="{Binding DataContext.ProcessStartUriCommand, RelativeSource={RelativeSource AncestorType=ListView, Mode=FindAncestor}}" CommandParameter="{Binding Url}">
                                            <TextBlock Text="{Binding Url}" TextTrimming="CharacterEllipsis" />
                                        </Hyperlink>
                                    </TextBlock>
                                </DataTemplate>
                            </GridViewColumn.CellTemplate>
                        </GridViewColumn>
                        <GridViewColumn
                            Width="Auto"
                            DisplayMemberBinding="{Binding Platform}"
                            Header="Platform" />
                        <GridViewColumn Width="Auto" Header="">
                            <GridViewColumn.CellTemplate>
                                <DataTemplate>
                                    <StackPanel Orientation="Horizontal">
                                        <Button
                                            Command="{Binding DataContext.ReplaySongHistoryCommand, RelativeSource={RelativeSource AncestorType=ListView, Mode=FindAncestor}}"
                                            CommandParameter="{Binding}"
                                            Content="🔁"
                                            Style="{DynamicResource {x:Static adonisUi:Styles.AccentButton}}" />
                                        <Button
                                            Margin="4,0,0,0"
                                            adonisExtensions:CursorSpotlightExtension.BackgroundBrush="Red"
                                            Background="Red"
                                            Command="{Binding DataContext.RemoveSongHistoryCommand, RelativeSource={RelativeSource AncestorType=ListView, Mode=FindAncestor}}"
                                            CommandParameter="{Binding}"
                                            Content="🗑️" />
                                    </StackPanel>
                                </DataTemplate>
                            </GridViewColumn.CellTemplate>
                        </GridViewColumn>
                    </GridView>
                </ListView.View>
            </ListView>
        </DockPanel>

        <StatusBar Grid.Row="4" BorderThickness="1">
            <i:Interaction.Triggers>
                <i:EventTrigger EventName="MouseDown">
                    <i:InvokeCommandAction Command="{Binding OpenStatusFeedCommand}" PassEventArgsToCommand="True" />
                </i:EventTrigger>
            </i:Interaction.Triggers>
            <StatusBarItem Margin="-1,-1,-1,-1" Padding="0">
                <DockPanel>
                    <Rectangle
                        Width="4"
                        Margin="0,0,4,0"
                        DockPanel.Dock="Left">
                        <Rectangle.Style>
                            <Style TargetType="{x:Type Rectangle}">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding StatusText.Type}" Value="Error">
                                        <Setter Property="Fill" Value="Red" />
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding StatusText.Type}" Value="Warning">
                                        <Setter Property="Fill" Value="Yellow" />
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding StatusText.Type}" Value="Info">
                                        <Setter Property="Fill" Value="{DynamicResource {x:Static adonisUi:Brushes.AccentBrush}}" />
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding StatusText.Type}" Value="Success">
                                        <Setter Property="Fill" Value="Green" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Rectangle.Style>
                    </Rectangle>
                    <TextBlock
                        Padding="0,4"
                        DockPanel.Dock="Right"
                        Text="{Binding StatusText}" />
                </DockPanel>
            </StatusBarItem>
        </StatusBar>

        <views:SettingsUserControl Grid.RowSpan="4" Visibility="{Binding IsSettingsOpen, Converter={StaticResource BoolToVisConverter}, FallbackValue=Collapsed}" />
        <views:SetupUserControl Grid.RowSpan="4" Visibility="{Binding IsSetupOpen, Converter={StaticResource BoolToVisConverter}, FallbackValue=Collapsed}" />
        <ContentControl Grid.RowSpan="4" Content="{Binding ConfirmationDialogViewModel, Mode=OneTime}" />

        <ListBox
            x:Name="EventsListBox"
            Grid.RowSpan="4"
            Background="{DynamicResource {x:Static adonisUi:Brushes.Layer1BackgroundBrush}}"
            ItemsSource="{Binding StatusFeed}"
            ScrollViewer.HorizontalScrollBarVisibility="Hidden"
            Visibility="{Binding IsStatusFeedOpen, Converter={StaticResource BoolToVisConverter}, FallbackValue=Collapsed}">
            <ListBox.ItemContainerStyle>
                <Style BasedOn="{StaticResource {x:Type ListBoxItem}}" TargetType="{x:Type ListBoxItem}">
                    <Setter Property="Padding" Value="0" />
                    <Setter Property="Margin" Value="0" />
                </Style>
            </ListBox.ItemContainerStyle>
            <ListBox.ItemTemplate>
                <DataTemplate>
                    <DockPanel MaxWidth="{Binding ActualWidth, RelativeSource={RelativeSource AncestorType=ContentPresenter, AncestorLevel=1}}">
                        <Rectangle
                            Width="4"
                            Margin="0,0,4,0"
                            DockPanel.Dock="Left">
                            <Rectangle.Style>
                                <Style TargetType="{x:Type Rectangle}">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding Type}" Value="Error">
                                            <Setter Property="Fill" Value="Crimson" />
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding Type}" Value="Warning">
                                            <Setter Property="Fill" Value="Yellow" />
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding Type}" Value="Info">
                                            <Setter Property="Fill" Value="{DynamicResource {x:Static adonisUi:Brushes.AccentBrush}}" />
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding Type}" Value="Success">
                                            <Setter Property="Fill" Value="Green" />
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding History}" Value="True">
                                            <Setter Property="Fill" Value="Gray" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Rectangle.Style>
                        </Rectangle>
                        <TextBlock
                            Padding="0,4"
                            DockPanel.Dock="Right"
                            Text="{Binding}" />
                    </DockPanel>
                </DataTemplate>
            </ListBox.ItemTemplate>
            <ListBox.ItemsPanel>
                <ItemsPanelTemplate>
                    <VirtualizingStackPanel MaxWidth="{Binding ActualWidth, RelativeSource={RelativeSource AncestorType=ContentPresenter, AncestorLevel=1}}" VerticalAlignment="Bottom" />
                </ItemsPanelTemplate>
            </ListBox.ItemsPanel>
        </ListBox>

        <views:WebView2UserControl
            Margin="270 0"
            Grid.Column="1"
            DataContext="{Binding WebView2ViewModel}" />

    </Grid>
</UserControl>
